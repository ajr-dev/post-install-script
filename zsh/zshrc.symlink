export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

command_exists() {
  command -v "$1" > /dev/null 2>&1
}

# Display how long all tasks over 10 seconds take
export REPORTTIME=10

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# Define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/code ]]; then
  export CODE_DIR=~/code
fi

# Source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

if [[ -a ~/.localrc ]]; then
  source ~/.localrc
fi

# Initialize autocomplete
autoload -U compinit add-zsh-hook
compinit

for config ($ZSH/**/*completion.sh) source $config

if command_exists nvim; then
  export EDITOR='nvim'
  export GIT_EDITOR='nvim'
fi

# Adding path directory for custom scripts
[ -d $DOTFILES/bin ]    &&  export PATH=$DOTFILES/bin:$PATH
[ -d /usr/local/sbin ]  &&  export PATH=/usr/local/sbin:$PATH
[ -d ~/bin ]            &&  export PATH=~/bin:$PATH
[ -d ~/Dropbox/.bin ]   &&  export PATH=~/Dropbox/.bin:$PATH
[ -d ~/.bin ]           &&  export PATH=~/.bin:$PATH
[ -d /usr/local/bin ]   &&  export PATH=/usr/local/bin:$PATH
[ -d /usr/local/go ]    &&  export GOPATH=$HOME/code/go
[ -d /usr/local/go ]    &&  export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
[ -f /usr/share/junit.jar ]  &&  export CLASSPATH=/usr/share/junit.jar:.:$CLASSPATH

export TERM=xterm-256color-italic

# Install rbenv
if command_exists rbenv; then
    eval "$(rbenv init -)"
fi

if [[ -d ~/.rvm ]]; then
    PATH=$HOME/.rvm/bin:$PATH # add RVM to PATH for scripting
    source ~/.rvm/scripts/rvm
fi

# Alias git to hub
if command_exists hub; then
    eval "$(hub alias -s)"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag -g ""'

# Start tmux automatically
# http://unix.stackexchange.com/questions/43601/how-can-i-set-my-default-shell-to-start-up-tmux
#if command_exists tmux; then
#[[ ! $TERM =~ screen ]] && [ -z $TMUX ] && { tmux attach || exec tmux new-session && exit; } # Esto cerraría el terminal al cerrar tmux
#  [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && { tmux attach || tmux new-session} # Esto no lo cerraría
#fi
