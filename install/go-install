#!/bin/bash

# Install go https://golang.org/doc/install#install

#exec 2>/tmp/stdout.log
#exec 2>/tmp/stderr.log
# shellcheck disable=SC2034
declare -f assertConfirmation &>/dev/null ||  source "$HOME/.dotfiles/install/declarations"

goVersion="1.8.1"
if [ "$ARCH" = "32" ];then localArch="386"; else localArch="amd64"; fi
[[ $OS == *"linux"* ]]  &&  localOS="linux"
if [ ! -d /usr/local/go ]; then
    https://storage.googleapis.com/golang/go1.8.1.linux-386.tar.gz
    wget https://storage.googleapis.com/golang/go$goVersion."$localOS"-$localArch.tar.gz \
    || { echo "Couldn't download go" ; exit ; }
    sudo tar -C /usr/local/ -zxvf go$goVersion."$localOS"-$localArch.tar.gz
    rm go$goVersion."$localOS"-$localArch.tar.gz
fi
goDir="~/code/go"
mkdir -p $goDir
# shellcheck disable=SC2016
if [ -f ~/.local.zsh ]  &&  ! grep -q "/usr/local/go/bin" ~/.local.zsh; then
    echo 'export GOPATH=$HOME/code/go' >> ~/.local.zsh
    echo 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin' >> ~/.local.zsh
elif [ -f ~/.zshrc ]  &&  ! grep -q "/usr/local/go/bin" ~/.zshrc; then
    echo 'export GOPATH=$HOME/code/go' >> ~/.zshrc
    echo 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin' >> ~/.zshrc
elif [ -f ~/.profile ]  &&  ! grep -q "/usr/local/go/bin" ~/.profile; then
    echo 'export GOPATH=$HOME/code/go' >> ~/.profile
    echo 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin' >> ~/.profile
    source ~/.profile
fi
mkdir -p $goDir/src/github.com/user/go-installed
cat << EOF > $goDir/src/github.com/user/go-installed/go-installed.go
package main

import "fmt"

func main() {
fmt.Printf("Go succesfully installed\n")
}
EOF
go install github.com/user/go-installed
go-installed  || { echo "Go wasn't properly installed" 1>&2 ; exit 1 ; }
rm -rf "$GOPATH/src/github.com/user/go-installed"
