#!/bin/bash

# shellcheck disable=SC2034
declare -f assertConfirmation &>/dev/null ||  source "$HOME/.dotfiles/install/declarations"

if assertConfirmation "Â¿Configure git?" "${autoConfirm:?}"; then
    source "$INSTALL/git-setup"
fi

if assertConfirmation "Import local config?" "${autoConfirm:?}"; then
    if [ -f ~/.dotfiles/local.vim ]  &&  [ -f ~/.dotfiles/local.zsh ]  &&  [ -f ~/.dotfiles/local.tmux ]; then
        cp ~/.dotfiles/local.vim ~/.local.vim
        cp ~/.dotfiles/local.zsh ~/.local.zsh
        cp ~/.dotfiles/local.tmux ~/.local.tmux
    else
        echo "Local configuration files don't exist" >&2
        exit
    fi
fi

[ sudo -v ]  &&  sudo apt-get install -y tmux
if command_exists tmux  &&  assertConfirmation "Configure tmux?" "${autoConfirm:?}"; then
    # Terminal con cursiva
    cd ~/.dotfiles/tmux  ||  { echo "$HOME/.dotfiles/tmux doesn't exist" ; exit ; }
    tic xterm-256color-italic.terminfo
    mkdir -p ~/.tmux/resurrect
    [ -f ~/.dotfiles/tmux/last ]  &&  cp ~/.dotfiles/tmux/last ~/.tmux/resurrect/
    if [[ ! -d ~/.tmux/plugins/tpm ]]; then
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    fi
fi

if assertConfirmation "Configure vim?" "${autoConfirm:?}"; then
    source "$INSTALL/link-setup"

    if [ sudo -v ]; then
        sudo apt-get -y install vim-gtk curl cmake xclip
    fi

    #if [[ ! -e ~/.vimrc  &&  ! -d ~/.vim  &&  ! -d ~/.config/nvim/ ]]; then
    if assertConfirmation "Install neovim?" "${autoConfirm:?}"; then
        source "$INSTALL/neovim-install"
    fi
    source "$INSTALL/vim-setup"
fi

if assertConfirmation "Change default shell to zsh?" "${autoConfirm:?}"; then
    if ! [[ $SHELL =~ .*zsh.* ]]; then
        echo "Configuring zsh as default shell"
        chsh -s "$(which zsh)"
    fi

    if ! command_exists zplug; then
        echo "installing zplug, a plugin manager for zsh - http://zplug.sh"
        git clone https://github.com/zplug/zplug ~/.zplug
    fi
fi

# https://askubuntu.com/questions/283908/how-can-i-install-and-use-powerline-plugin
if assertConfirmation "Add powerline fonts?" "${autoConfirm:?}"; then
    source "$INSTALL/font-install"
fi

if assertConfirmation "Change system settings?" "${autoConfirm:?}"; then
    if [[ $DESKTOP == "gnome" ]]; then
        source "$INSTALL/gnome-settings"
    elif [[ $DESKTOP == "cinnamon" ]]; then
        source "$INSTALL/cinnamon-settings"
    elif [[ $DESKTOP == "mate" ]]; then
        source "$INSTALL/mate-settings"
    elif [[ $DESKTOP == "kali" ]]; then
        source "$INSTALL/kali-settings"
    fi
fi

if assertConfirmation "Unattended upgrades?" "${autoConfirm:?}"; then
    source "$INSTALL/unattended-upgrades"
fi

if assertConfirmation "Never ask for passwords?"; then
    source "$INSTALL/no-password-prompt"
fi

if [ -d ~/Dropbox ]  &&  assertConfirmation "Copy dropbox files to system?"; then
    source "$INSTALL/dropbox-setup"
fi
