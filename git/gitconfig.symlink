# Make .gitconfig Work for You: http://michaelwales.com/articles/make-gitconfig-work-for-you/
[alias]
    # List aliases
    la = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort
    # Add all. Remove from git deleted files  AND  stages the modified (-m) and other (-o) files
    aa = !git ls-files -d | xargs -r git rm  &&  git ls-files -m -o --exclude-standard | xargs -r git add
    ci = commit -a  # automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected
    co = checkout   # switch HEAD branch
    ss  = status    # show changed files in your working directory
    s = status --short
    br = branch     # create a new branch based on your current HEAD
    # log shows all commits. This shows a pretty log graph
    lg = log --graph --pretty=oneline --abbrev-commit --decorate
    # Show files that have changed between two branches (git dbr master..branch)
    dbr = diff --name-status

    # Stash the changes in a dirty working directory on a stack of unfinished changes to continue later
    sw = stash save
    sp = stash pop
    sl = stash list

    # grep commands

    # 'diff grep'
    dg = "!sh -c 'git ls-files -m | grep $1 | xargs git diff' -"
    # 'checkout grep'
    cg = "!sh -c 'git ls-files -m | grep $1 | xargs git checkout ' -"
    # add grep
    ag = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add' -"
    # remove grep - Remove found files that are NOT under version control
    rg = "!sh -c 'git ls-files --others --exclude-standard | grep $1 | xargs rm -i' -"

[branch]
    # set up 'git pull' to rebase instead of merge
    autosetuprebase = always

[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
    ui = auto

[color "branch"]
    current = green bold
    local = green
    remote = red bold

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red

[color "sh"]
    branch = yellow

[core]
    excludesfile = /Users/pollen/.gitignore_global

[diff]
    renames = copies
    mnemonicprefix = true

[push]
    # push will only do the current branch, not all branches
    default = current

[github]
    user = arturojosejr

[url "https://bitbucket.org/"]
    insteadOf = bb:

[url "https://github.com/"]
    insteadOf = gh:

[url "https://gist.github.com/"]
    insteadOf = gist:

[user]
    name = Arturo
    email = arturojosejr@gmail.com
